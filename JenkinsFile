pipeline {
    agent {
      docker {
        image 'abhishekf5/maven-abhishek-docker-agent:v1'
        args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
      }
    }
    environment {
        GIT_REPO = 'https://github.com/thedevops-mohi/java-app.git'
        BRANCH_NAME = 'main'
        SONARQUBE_SERVER = 'http://192.168.0.25:9000'
        SONARQUBE_TOKEN = credentials('sonarqube-token')
        DOCKER_HUB_REPO = 'auwalu5/java_app'
        DOCKER_HUB_CREDENTIALS = credentials('DOCKER_HUB_CREDENTIALS')
        DOCKER_HUB_PASSWORD = credentials('DOCKER_HUB_PASSWORD')
        DOCKER_HUB_USERNAME = credentials('DOCKER_HUB_USERNAME')
        DOCKER_IMAGE_TAG = 'latest'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: "${BRANCH_NAME}", url: "${GIT_REPO}"
            }
        }
        stage('Build and Test') {
            steps {
                sh 'mvn clean install'
            }
        }
        // stage('Static Code Analysis') {
        //     steps {
        //         withSonarQubeEnv('SonarQube') {
        //             sh "mvn sonar:sonar -Dsonar.host.url=${SONARQUBE_SERVER} -Dsonar.login=${SONARQUBE_TOKEN}"
        //         }
        //     }
        // }
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${DOCKER_HUB_REPO}:${DOCKER_IMAGE_TAG}")
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_HUB_CREDENTIALS}") {
                        dockerImage.push()
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
